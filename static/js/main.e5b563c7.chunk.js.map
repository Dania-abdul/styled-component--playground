{"version":3,"sources":["styled-components/themes/dark.tsx","styled-components/themes/light.tsx","styled-components/generals.tsx","styled-components/typography.tsx","styled-components/clickables.tsx","styled-components/table.tsx","styled-components/lists.tsx","styled-components/Cards.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["colors","PrimaryColor","SecondaryColor","TeritaryColor","Gradiant100","color100","color200","color300","GlobalStyle","createGlobalStyle","Header","styled","header","props","theme","Nav","nav","Input","input","attrs","type","rotate","keyframes","Rotate","div","StyledSlide","span","Slider","state","value","handleOnChange","e","setState","target","min","max","this","className","onChange","React","Component","Title","h1","SubTitle","p","Text","color001","Link","a","PrimaryButton","button","SecondaryButton","TableContainer","TableCell","CellHeader","CellContent","List","ul","ListItem","li","Card","FormCard","ButtonsBlock","App","stored","localStorage","getItem","useState","isDarkMode","setIsDarkMode","darkTheme","lightTheme","href","onClick","setItem","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5b563c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport default {\r\n    colors: {\r\n        PrimaryColor: \"#4593a8\",\r\n        SecondaryColor: \"#db7093\",\r\n        TeritaryColor: \"green\t\",\r\n        Gradiant100: \"linear-gradient(0deg, rgb(219, 112, 147), rgb(218, 163, 87))\",\r\n\r\n        color100: \"white\",\r\n        color200: \"#f3b661\",\r\n        color300: \"blue\",\r\n        \r\n    }\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport default {\r\n    colors: {\r\n        PrimaryColor: \"#db7093\",\r\n        SecondaryColor: \"#4593a8\",\r\n        TeritaryColor: \"green\",\r\n        Gradiant100: \"linear-gradient(0deg, rgb(219, 112, 147), rgb(218, 163, 87))\",\r\n\r\n        color100: \"#fff\",\r\n        color200: \"#f3b661\",\r\n        color300: \"blue\",\r\n        \r\n    }\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { keyframes } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n*, *:before, *:after {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\r\n\t-webkit-box-sizing: border-box ;\r\n\t-moz-box-sizing: border-box ;\r\n\t-ms-box-sizing: border-box ;\r\n\tbox-sizing: border-box ;\r\n\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    padding: 30px;\r\n    color: white;\r\n    background:  ${props => props.theme.colors.Gradiant100};\r\n    @media (min-width: 1025px) {\r\n        padding: 50px;\r\n    }\r\n`\r\n\r\nexport  const Nav = styled.nav`\r\n    padding: 10px;\r\n    background:  ${props => props.theme.colors.SecondaryColor};\r\n    color: white; \r\n    margin-bottom: 30px;\r\n`\r\n\r\nexport const Input = styled.input.attrs(props => ({type: props.type }))`\r\n    width:100%;\r\n    height:40px;\r\n    background: red;\r\n    border-radius: 5px;\r\n    border: 1px solid ${props => props.theme.colors.SecondaryColor};\r\n    text-align:center;\r\n    background-color: ${props => props.type == \"info\" ? \"#5eafff\" : \"white\"};\r\n`    \r\n\r\n\r\nexport const rotate = keyframes`\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`\r\n\r\nexport const Rotate = styled.div`\r\n    display: inline-block;\r\n    animation: ${rotate} 2s linear infinite;\r\n    padding: 2rem 1rem;\r\n    font-size: 1.2rem;\r\n`\r\n\r\nexport const Line = styled.span `\r\n    display: block;\r\n    height: 1px; \r\n    background:${props => props.theme.colors.TeritaryColor};\r\n    width: 100%;\r\n    margin: 10px 0;\r\n`\r\n// SLIDERS \r\n\r\nconst sliderThumbsStyles = (props: any) =>(`\r\n    width: 15px;\r\n    height: 25px;\r\n    background: blue;\r\n    currsor: pointer;\r\n\r\n`)\r\n\r\n// ${props => (props.state.value > 10) ? (this.state.value /255) : .1}\r\nexport const StyledSlide = styled.div `\r\n    display: fex;\r\n    align-items: center;\r\n    color:#888;\r\n    width: 200px;\r\n    justify-content: space-between;\r\n    .value {\r\n        flex: 1;\r\n    }\r\n\r\n    .slider {\r\n        flex: 6;\r\n        -webkit-appearance: none;\r\n        width: 100%;\r\n        height: 15px;\r\n        border-radious: 5px;\r\n        background: ${props => props.theme.colors.color200};\r\n        \r\n        &::-webkit-slider-thumb {\r\n            -webkit-appearance:none;\r\n            appearance: none;\r\n            ${props => sliderThumbsStyles(props)}\r\n        }\r\n\r\n        &::-moz-range-thumb {\r\n            ${props => sliderThumbsStyles(props)}\r\n        }\r\n    }\r\n`;\r\n\r\nexport class Slider extends React.Component {\r\n  state = {\r\n      value: 50\r\n  }\r\n\r\n  handleOnChange = (e: any) => this.setState({ value: e.target.value})\r\n\r\n  render() {\r\n      return (\r\n          <StyledSlide>\r\n              <input type=\"range\" min={0} max={255} value={this.state.value} className=\"slider\" onChange={this.handleOnChange} />\r\n              <div>\r\n                  <p className=\"value\">{this.state.value}</p>\r\n              </div>\r\n          </StyledSlide>    \r\n      )\r\n  }\r\n}\r\n\r\n//END SLIDER","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 24px;\r\n  text-align: center;\r\n`\r\nexport const SubTitle = styled.p`\r\n  font-size: 16px;\r\n  text-align: center;\r\n`\r\n\r\nexport const Text = styled.p `\r\n    font-size: 16px;\r\n    color: ${props => props.theme.colors.color001};\r\n    margin: 0;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n//link\r\nexport const Link = styled.a`\r\n  text-decoration:none;\r\n  border-bottom: 1px solid  ${props => props.theme.colors.color100};\r\n  color: inherit;\r\n  \r\n  &:hover{\r\n    color: coral;\r\n  }\r\n`\r\n\r\n////buttons\r\nexport const PrimaryButton = styled.button`\r\n  color :  ${props => props.theme.colors.PrimaryColor};\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  padding: 10px 20px;\r\n  border: 1px solid ${props => props.theme.colors.PrimaryButton};\r\n  border-radius: 3px;\r\n  transition: color 0.3s ease, background-color 0.3s ease;\r\n  background:  ${props => props.theme.colors.color100};\r\n  max-width: 200px;\r\n  \r\n  &:hover {\r\n    background: \"red\";\r\n  }\r\n`;\r\n\r\nexport const SecondaryButton = styled(PrimaryButton) `\r\n  color: ${props => props.theme.colors.color100};\r\n  background:  ${props => props.theme.colors.PrimaryColor};\r\n`\r\n\r\nexport const CardButton = styled(PrimaryButton)`  \r\n  color: ${props => props.theme === 'light' ? '#fff' : '#fefefe'};\r\n  opacity: ${props => props.theme === 'light' ? 1 : 0.7};\r\n  background-color: ${props => props.theme === 'light' ? '#ff4081' : '#676767'};\r\n`;\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport const TableContainer = styled.div `\r\n    display: flex; \r\n    flex-wrap: wrap;\r\n    max-width: 1300px;\r\n    margin: 0 auto;\r\n    padding: 0 30px;\r\n    box-sizing: border-box;\r\n    flex-direction: column;    \r\n    \r\n    @media(min-width: 1024px) {\r\n        flex-direction: row;    \r\n    }\r\n`\r\n\r\nexport const TableCell = styled.div `\r\n    box-sizing: border-box;\r\n    min-height: 300px;\r\n    position: relative;\r\n    margin-bottom: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-content: center;\r\n    align-items: center;\r\n    border:1px solid black;\r\n    margin: 0 auto;\r\n    border: 2px solid ${props => props.theme.colors.SecondaryColor};\r\n    width: 100%;\r\n    margin-bottom: 40px;\r\n\r\n\r\n    @media(min-width: 1024px) {\r\n        width: 50%;\r\n    }\r\n`\r\n\r\nexport const CellHeader = styled.div`\r\n    box-sizing: border-box;\r\n    padding: 5px;\r\n    box-sizing:border-box;\r\n    margin-bottom: 30px;\r\n    width: 100%;\r\n    color: white;\r\n    background: ${props => props.theme.colors.SecondaryColor};\r\n`\r\n\r\nexport const CellContent = styled.div`\r\n    box-sizing: border-box;\r\n    flex: 1;\r\n    margin: 10px;\r\n    width: 100%;\r\n    height: 100%;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n//List \r\nexport const List = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nexport const Card = styled.div`\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 300px;\r\n    min-height: 200px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    border-radius: 5px;\r\n    padding: 20px;\r\n    justify-content: center;\r\n    \r\n    > p {\r\n        margin-bottom: 15px\r\n    }\r\n    \r\n    @media(min-width: 1024px) {\r\n        max-width: 400px;\r\n    }\r\n`\r\n\r\n\r\nexport const FormCard = styled(Card) `\r\n\r\n    > input, button {\r\n        margin-bottom: 10px;\r\n    }\r\n`\r\n\r\n//\r\nexport const ButtonsBlock = styled.div`\r\n    display: flex;\r\n    max-width: 400px;\r\n    justify-content: space-around;\r\n    margin: 0 auto;\r\n`\r\n","import React, { useState } from \"react\";\nimport './App.css';\n\nimport { ThemeProvider } from \"styled-components\";\nimport darkTheme from \"../src/styled-components/themes/dark\";\nimport lightTheme  from \"../src/styled-components/themes/light\";\n\nimport styled, { keyframes } from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nimport { GlobalStyle, Header, Nav, Input, Rotate, Line, Slider } from './styled-components/generals'\nimport { Title, Text, SubTitle } from './styled-components/typography'\nimport { Link, PrimaryButton, SecondaryButton  } from './styled-components/clickables'\nimport { TableContainer, TableCell, CellHeader, CellContent } from './styled-components/table'\nimport { List, ListItem} from './styled-components/lists'\nimport { ButtonsBlock, FormCard, Card } from './styled-components/Cards'\n\n\n\n\nconst App = () => {\n  const stored = localStorage.getItem(\"isDarkMode\");\n  const [isDarkMode, setIsDarkMode] = useState(\n    stored === \"true\" ? true : false\n  );\n\n  return (\n    <div className=\"App\">\n          <GlobalStyle />\n          <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n            <Header>\n              <Title>\n                Hello Styled-components! <Rotate>&lt; 💅 &gt;</Rotate>\n              </Title>\n              <SubTitle>This is a React Style-Component Playground</SubTitle>\n              <SubTitle>This is a repo that illustrates the very basics of <Link href=\"https://styled-components.com/\">styled-components</Link> with <Link href=\"https://reactjs.org/\"> React</Link>  </SubTitle>\n            </Header>\n            <Nav>\n              <List>\n                <ListItem><Link href=\"https://github.com/Dania-abdul/styled-component--playground\">GitHub repository</Link></ListItem>\n                {/* <ListItem><Link href=\"https://github.com/Dania-abdul/styled-component--playground\"></Link></ListItem>\n                <ListItem></ListItem> */}\n    \n              </List>\n            </Nav>\n            <TableContainer>  \n                <TableCell>\n                  <CellHeader>Change mood </CellHeader>\n                  <CellContent>\n                    <Card>\n                      <Text>\n                        Vanilla Mode is {isDarkMode ? \"Enabled\" : \"Disabled\"}\n                      </Text>\n                      <PrimaryButton\n                        onClick={() => { setIsDarkMode(!isDarkMode);\n                        localStorage.setItem(\"isDarkMode\", `${!isDarkMode}`); }}\n                        >\n                          Change Mood\n                      </PrimaryButton>\n                    </Card>\n                  </CellContent>\n                </TableCell>\n                <TableCell>\n                  <CellHeader>Login Form  </CellHeader>\n                  <CellContent>   \n                    <FormCard>\n                      <Text>Please Login</Text>\n                      <Input type=\"text\" placeholder=\"yourmail@domain.com\"></Input>\n                      <Input type=\"password\" placeholder=\"your password\"></Input>\n                      <PrimaryButton>Primary</PrimaryButton>\n                      <Text>Don't have an account? <Link href=\"github.com\">Create One</Link></Text>\n                   \n                    </FormCard>\n                    </CellContent> \n                </TableCell>  \n                <TableCell>\n                  <CellHeader> Buttons </CellHeader>\n                  <CellContent>\n                    <ButtonsBlock>\n                      <PrimaryButton>Primary</PrimaryButton>\n                      <SecondaryButton>Secondary</SecondaryButton>\n                    </ButtonsBlock>\n                  </CellContent>\n                </TableCell>\n      \n                <TableCell>\n                  <CellHeader> Slider </CellHeader>\n                  <CellContent>\n                    <Card>\n                      <Slider></Slider>\n                    </Card>\n                  </CellContent>\n                </TableCell>  \n              </TableContainer>\n          </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}